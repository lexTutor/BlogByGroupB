// <auto-generated />
using System;
using DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataContext.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20210227125903_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("KingdomBlog.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KingdomBlog.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApprovalState")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticleCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LikeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostDetails")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("KingdomBlog.Models.PostActivity", b =>
                {
                    b.Property<int>("PostActivityiD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PostActivityTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostComment")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PostActivityiD");

                    b.HasIndex("PostActivityTypeId");

                    b.HasIndex("PostId");

                    b.ToTable("PostActivities");
                });

            modelBuilder.Entity("KingdomBlog.Models.PostActivityType", b =>
                {
                    b.Property<int>("PostActivityTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostActivity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PostActivityTypeId");

                    b.ToTable("PostActivityTypes");
                });

            modelBuilder.Entity("KingdomBlog.Models.PostCategories", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("PostCategories");
                });

            modelBuilder.Entity("KingdomBlog.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KingdomBlog.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserStory")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KingdomBlog.Models.UserActivity", b =>
                {
                    b.Property<int>("UserActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivityTypeUserActivityTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeletedUserDetails")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserActivityId");

                    b.HasIndex("ActivityTypeUserActivityTypeId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("KingdomBlog.Models.UserActivityType", b =>
                {
                    b.Property<int>("UserActivityTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActivityTypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserActivityTypeId");

                    b.ToTable("UserActivityTypes");
                });

            modelBuilder.Entity("KingdomBlog.Models.Post", b =>
                {
                    b.HasOne("KingdomBlog.Models.User", "PostCreator")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostCreator");
                });

            modelBuilder.Entity("KingdomBlog.Models.PostActivity", b =>
                {
                    b.HasOne("KingdomBlog.Models.PostActivityType", "PostActivityType")
                        .WithMany("PostActivities")
                        .HasForeignKey("PostActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingdomBlog.Models.Post", "Post")
                        .WithMany("PostActivities")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("PostActivityType");
                });

            modelBuilder.Entity("KingdomBlog.Models.PostCategories", b =>
                {
                    b.HasOne("KingdomBlog.Models.Category", "Category")
                        .WithMany("PostCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingdomBlog.Models.Post", "Post")
                        .WithMany("PostCategories")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("KingdomBlog.Models.User", b =>
                {
                    b.HasOne("KingdomBlog.Models.Role", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("KingdomBlog.Models.UserActivity", b =>
                {
                    b.HasOne("KingdomBlog.Models.UserActivityType", "ActivityType")
                        .WithMany("UserActivities")
                        .HasForeignKey("ActivityTypeUserActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingdomBlog.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingdomBlog.Models.User", null)
                        .WithMany("UserActivity")
                        .HasForeignKey("UserId");

                    b.Navigation("ActivityType");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("KingdomBlog.Models.Category", b =>
                {
                    b.Navigation("PostCategories");
                });

            modelBuilder.Entity("KingdomBlog.Models.Post", b =>
                {
                    b.Navigation("PostActivities");

                    b.Navigation("PostCategories");
                });

            modelBuilder.Entity("KingdomBlog.Models.PostActivityType", b =>
                {
                    b.Navigation("PostActivities");
                });

            modelBuilder.Entity("KingdomBlog.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("KingdomBlog.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("UserActivity");
                });

            modelBuilder.Entity("KingdomBlog.Models.UserActivityType", b =>
                {
                    b.Navigation("UserActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
